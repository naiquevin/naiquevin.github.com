<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Vineet's blog</title><link href="http://naiquevin.github.com/" rel="alternate"></link><link href="http://naiquevin.github.com/feeds/emacs,%20elisp.atom.xml" rel="self"></link><id>http://naiquevin.github.com/</id><updated>2013-04-01T00:00:00+05:30</updated><entry><title>NaturalDocs for Javascript in Emacs</title><link href="http://naiquevin.github.com/naturaldocs-for-javascript-in-emacs.html" rel="alternate"></link><updated>2013-04-01T00:00:00+05:30</updated><author><name>Vineet Naik</name></author><id>tag:naiquevin.github.com,2013-04-01:naturaldocs-for-javascript-in-emacs.html</id><summary type="html">&lt;p&gt;Last week we decided to use &lt;a href="http://www.naturaldocs.org/"&gt;NaturalDocs&lt;/a&gt;
for Javascript documentation at work. I noticed that a few of my
colleagues who are SublimeText users started using a plugin that
inserts docstring skeleton in code. I tried to find a similar mode in
emacs but couldn't find one. But this is emacs right? and it's called
a "programmers editor" for a reason. What do you do if you need some
functionality and there isn't a mode for it?  You simply write your
own!&lt;/p&gt;
&lt;p&gt;So, I decided to spend a few hours of this weekend writing some elisp
code for intelligently inserting NaturalDocs style docstring in
javascript. Here is the
&lt;a href="https://github.com/naiquevin/emacs-config/blob/master/naiquevin/nd-js.el"&gt;result&lt;/a&gt;
and I am quite happy with it.&lt;/p&gt;
&lt;p&gt;It was an 'achievement unlocked' moment for me as this is the first
time I have written emacs lisp that comes so close to being called a
"mode". But I will not call it a "mode" yet for the following reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I know it just works but isn't packaged as a other emacs mode out
  there.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The code may be violating elisp code conventions. I need to read up
  more on this topic.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Right now some code seems to be 'imperative' and can be made a lot
  more 'functional'.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It only supports javascript but can be extended to other
  languages. After all NaturalDocs work for many languages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It needs to be refactored to improve test coverage. I have done some
  unit testing using assert statements but there is probably a better
  way that supports mocking the buffer, point etc..  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the coming days, I plan to work on these points.&lt;/p&gt;
&lt;p&gt;This was also the first time I learnt how to work with the elisp
manual. Earlier I had tried to read it as a book. But with no clear
task in mind, I lost the motivation soon. This time I had a task to
accomplish and after breaking it down into smaller tasks it was very
easy to search through the manual. I found it to be very well written
and was sufficient most of the times although a few times I had to
resort to stackoverflow.&lt;/p&gt;
&lt;p&gt;Hopefully I will release it as a mode some day.&lt;/p&gt;</summary><category term="emacs"></category><category term="NaturalDocs"></category><category term="Javascript"></category></entry></feed>